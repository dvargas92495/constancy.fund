import getMysql from "./mysql.server";
import { MethodNotAllowedError, NotFoundError } from "aws-sdk-plus/dist/errors";
import eversign from "./eversign.server";
import FUNDRAISE_TYPES from "../enums/fundraiseTypes";

const getContract = ({ uuid, signer }: { uuid: string; signer: string }) => {
  const { execute, destroy } = getMysql();
  return execute(
    `SELECT e.id
    FROM eversigndocument e
    WHERE e.agreementUuid = ?`,
    [uuid]
  ).then((d) => {
    const results = d as { id: string }[];
    if (!results.length)
      throw new NotFoundError(
        `Could not find contract generated by id ${uuid}`
      );
    return eversign
      .getDocumentByHash(results[0].id)
      .then(
        (doc) =>
          doc
            .getSigners()
            .find((s) => s.getId() === Number(signer))
            ?.getEmbeddedSigningUrl() || ""
      )
      .then((url) =>
        execute(
          `SELECT f.userId, f.type, f.uuid
          FROM agreement a
          INNER JOIN contract f ON f.uuid = a.contractUuid
          WHERE a.uuid = ?`,
          [uuid]
        ).then(async (c) => {
          destroy();
          const results = c as { userId: string; type: number; uuid: string }[];
          if (!results.length)
            throw new MethodNotAllowedError(
              `Cannot find fundraise tied to agreement ${uuid}`
            );
          return {
            userId: results[0].userId,
            type: FUNDRAISE_TYPES[results[0].type].name,
            agreementUuid: uuid,
            url,
            contractUuid: results[0].uuid,
          };
        })
      );
  });
};

export default getContract;
